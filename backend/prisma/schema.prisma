generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = "prisma://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiOWIxODY3ZDQtN2EzMy00NzA0LTkxYzktMTljZDE5ZjljMDM1IiwidGVuYW50X2lkIjoiYTk5ZDg0OTQ1ZWU5NTY1MmUyZGNkNGE0ZTM2ZDBkMjk2NzNkOTkzYjFlYjEzOWNhNDQ0YWNlY2VkMmNmZjQ4OCIsImludGVybmFsX3NlY3JldCI6ImU2MmE4YzY5LTJiOGItNDgwNy05MDlhLTJhNzA5NzZmODE4YSJ9.4e0NUObKEEFLtXbfzyLsrgrQESgd5z-3ABoVIyyWmPw"
  directUrl = "postgresql://adithya_owner:RVExY4XJ7UfW@ep-broad-bird-a164ry4b.ap-southeast-1.aws.neon.tech/adithya?sslmode=require"
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  name     String?
  password String
  posts    Post[]    @relation("UserPosts")
  likes    Like[]
  comments Comment[]
  Dislike  Dislike[]
}

model Post {
  id        String    @id @default(uuid())
  title     String
  content   String
  published Boolean   @default(false)
  authorId  String
  references String?
  author    User      @relation(fields: [authorId], references: [id], name: "UserPosts")
  likes     Like[]
  dislikes  Dislike[]
  comments  Comment[]
}

model Like {
  id     String @id @default(uuid())
  userId String
  postId String
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])

  @@unique([userId, postId])
}

model Dislike {
  id     String @id @default(uuid())
  userId String
  postId String
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])

  @@unique([userId, postId])
}

model Comment {
  id      String @id @default(uuid())
  content String
  userId  String
  postId  String
  user    User   @relation(fields: [userId], references: [id])
  post    Post   @relation(fields: [postId], references: [id])
}
